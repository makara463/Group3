@model Group3_LIbraryManagement_AGAAPP.Models.Penalty

@{
    ViewData["Title"] = "Create Penalty";
    Layout = "~/Views/Shared/Admin/_AdminLayout.cshtml";
}

<div class="container mt-5">
    <h1 class="mb-4">Create Penalty</h1>

    <form asp-action="Create" id="createForm" class="row g-3">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="col-md-6">
            <label asp-for="Id" class="form-label"></label>
            <input asp-for="Id" type="text" class="form-control" />
            <span asp-validation-for="Id" class="text-danger"></span>
        </div>

        <!-- Student Dropdown -->
        <div class="col-md-6">
            <label asp-for="StudentId" class="form-label"></label>
            <select asp-for="StudentId" class="form-select" asp-items="ViewBag.StudentId">
                <option value="">-- Select Student --</option>
            </select>
            <span asp-validation-for="StudentId" class="text-danger"></span>
        </div>

        <!-- Issue Dropdown -->
        <div class="col-md-6">
            <label asp-for="IssueId" class="form-label"></label>
            <select asp-for="IssueId" class="form-select" asp-items="ViewBag.IssueId">
                <option value="">-- Select Issue --</option>
            </select>
            <span asp-validation-for="IssueId" class="text-danger"></span>
        </div>

        <!-- Penalty Type -->
        <div class="col-md-6">
            <label asp-for="PenaltyType" class="form-label"></label>
            <input asp-for="PenaltyType" class="form-control" />
            <span asp-validation-for="PenaltyType" class="text-danger"></span>
        </div>

        <!-- Amount -->
        <div class="col-md-6">
            <label asp-for="Amount" class="form-label"></label>
            <input asp-for="Amount" class="form-control" />
            <span asp-validation-for="Amount" class="text-danger"></span>
        </div>

        <!-- Penalty Date -->
        <div class="col-md-6">
            <label asp-for="PenaltyDate" class="form-label"></label>
            <input asp-for="PenaltyDate" type="date" class="form-control" />
            <span asp-validation-for="PenaltyDate" class="text-danger"></span>
        </div>

        <!-- Payment Status -->
        <div class="col-md-6">
            <label asp-for="PaymentStatus" class="form-label"></label>
            <select asp-for="PaymentStatus" class="form-select">
                <option value="">-- Select Payment Status --</option>
                <option value="Paid">Paid</option>
                <option value="Unpaid">Unpaid</option>
            </select>
            <span asp-validation-for="PaymentStatus" class="text-danger"></span>
        </div>

        <!-- Payment Date -->
        <div class="col-md-6">
            <label asp-for="PaymentDate" class="form-label"></label>
            <input asp-for="PaymentDate" type="date" class="form-control" />
            <span asp-validation-for="PaymentDate" class="text-danger"></span>
        </div>

        <!-- Submit and Back Buttons -->
        <div class="col-12">
            <button type="submit" class="btn btn-primary"><i class="fas fa-save"></i> Save</button>
            <a asp-action="Index" class="btn btn-secondary"><i class="fas fa-arrow-left"></i> Back to List</a>
        </div>
    </form>
</div>
<!-- SweetAlert Script -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Check for success message
        const successMessage = '@TempData["SuccessMessage"]';
        if (successMessage) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: successMessage,
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '@Url.Action("Index")'; // Redirect to Index page
                }
            });
        }

        // Check for error message
        const errorMessage = '@TempData["ErrorMessage"]';
        if (errorMessage) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: errorMessage,
                confirmButtonText: 'OK'
            });
        }
    });

    // Form Validation with SweetAlert
    document.getElementById('createForm').addEventListener('submit', function (e) {
        const form = e.target;
        if (!form.checkValidity()) {
            e.preventDefault(); // Prevent form submission
            Swal.fire({
                icon: 'warning',
                title: 'Validation Error',
                text: 'Please fill in all required fields.',
                confirmButtonText: 'OK'
            });
        }
    });
</script>
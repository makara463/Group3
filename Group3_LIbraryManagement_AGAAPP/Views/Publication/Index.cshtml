@model IEnumerable<Group3_LIbraryManagement_AGAAPP.Models.Publication>

@{
    ViewData["Title"] = "Publications";
    Layout = "~/Views/Shared/Admin/_AdminLayout.cshtml";
}
<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="card-title mb-0">Publications</h4>
                </div>
                <div class="card-body">
                    <!-- Search Bar -->
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <form asp-action="Index" method="get" class="d-flex">
                                <input class="form-control me-2" type="search" name="searchQuery" placeholder="Search for..." aria-label="Search" value="@ViewBag.SearchQuery">
                                <button class="btn btn-outline-success" type="submit">Search</button>
                            </form>
                        </div>
                        <div class="col-md-6 text-end">
                            <a asp-action="Create" class="btn btn-primary">Create New Publication</a>
                        </div>
                    </div>

                    <!-- Responsive Table -->
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.Id)</th>
                                    <th>@Html.DisplayNameFor(model => model.Title)</th>
                                    <th>@Html.DisplayNameFor(model => model.Author)</th>
                                    <th>@Html.DisplayNameFor(model => model.ISBN_Code)</th>
                                    <th>@Html.DisplayNameFor(model => model.Publisher)</th>
                                    <th>@Html.DisplayNameFor(model => model.Genre)</th>
                                    <th>@Html.DisplayNameFor(model => model.Publication_Type)</th>
                                    <th>@Html.DisplayNameFor(model => model.Publication_Language)</th>
                                    <th>@Html.DisplayNameFor(model => model.Book_Edition)</th>
                                    <th>@Html.DisplayNameFor(model => model.Description)</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.Id)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Author)</td>
                                        <td>@Html.DisplayFor(modelItem => item.ISBN_Code)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Publisher)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Genre)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Publication_Type)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Publication_Language)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Book_Edition)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                        <td>
                                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Edit</a>
                                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger delete-btn">Delete</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- SweetAlert2 Script -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Check for success message
        if ('@TempData["SuccessMessage"]' !== '') {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: '@TempData["SuccessMessage"]',
                confirmButtonText: 'OK'
            });
        }

        if ('@TempData["ErrorMessage"]' !== '') {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: '@TempData["ErrorMessage"]',
                confirmButtonText: 'OK'
            });
        }

        // Handle delete button clicks
        document.querySelectorAll('.delete-btn').forEach(btn => {
            btn.addEventListener('click', function (e) {
                e.preventDefault(); // Prevent the default link behavior
                const url = this.href; // Get the delete URL

                Swal.fire({
                    icon: 'warning',
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = url; // Redirect to delete URL
                    }
                });
            });
        });
    });
</script>